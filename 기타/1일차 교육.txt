
 컴퓨터 
  처리량 또는 규모에 따라  :  Super -> Mainframe -> Mini -> 워크스테이션 -> PC(Desktop -> Laptop -> Notbook -> Tablet -> Smartphone -> Smart Watch)

  하드웨어 : 물리적으로 손으로 만질 수 있는 것.
         입력 : 키보드, 마우스, 스캐너
         출력 : 모니터, 프린터, 플로터
         주기억 : RAM, ROM  ( CPU가 임시적으로 저장)
         보조기억 : 자기 테이프, 자기 드럼, 자기(하드) 디스크, USB 메모리       (파일형태로 저장가능한공간)
         중앙처리장치 : 
         CPU는 필요한 데이터를 주기억(메모리) 장치에 보관하여 주소를 기억한다.
         통신장치 : 램카드, 모뎀, 라우터 
                           store                        save
	  CPU          ->         메모리          ->          보조기억장치(파일형태:데이터를 저장한 형태)
                             <-                           <-
                           load(fetch)                  load

  소프트웨어 : 논리적이며 눈으로만 볼 수 있는 것. 프로그램이라고도 함.
         시스템 S/W : 운영체제와 같이 하드웨어 시스템을 운용하고 사용자가 편리하게 사용할 수 있도록 하드웨어를 제어할 수 있는 소프트웨어
         응용(Application)S/W: 하드웨어의 제어 목적이 아니라 특정 업무를 보기위한 목적으로 만든 프로그

           개발 특징에 따른 Application의 종류 : Native App, Web App, Hybrid App
           업무 특성에 따른 Application의 종류 : 워드프로세서, 스프레드시트, 데이터베이스, 프리젠테이션, 인트라넷, 그래픽 소프트웨어, 게임, 설계용 소프트웨어 등

	                                 2진수로 변환                                 실행 가능상태로 만듦
            원시코드(Source) 코드           ->            목적코드(Object) 코드            ->            로드 모듈           ->           실행
                                            언어번역기                                          적재기(로더)

            언어 번역기의 종류 : 어셈블로, 컴파일어, 인터프리터 

            컴파일어 : C언어, java(바이트 머신 기반 언어)
            인터프리터 : basic, python
            
            웹 기반 언어 : asp  -> .net 또는 C#
                              php -> lalabel
                              jsp  -> spring
                              javascript -> react

            프로그램 개발 방법론
                        - 폭포수 모델
                        - V 모델
                                요구분석                                      인수
                                     시스템설계                   시스템테스트
                                           상세설계             통합테스트
                                                코딩(개발)    단위테스팅
                        - 스파이럴 모델 
                        - 프로토타입 모델 
                        - 애자일 모델 (DevOps)

            전통적인 프로그램 개발 단계
                        기획 -> 분석 및 설계 개발 -> 테스트 및 수정보완 -> 완료

            프로젝트 개발 포지션 
                        PM  - PL  - PD  - Dev - Designer - Director - Engineer - DBA
		                     (FE/BE)

            개발 프로젝트의 발생
                        제안요청 -> 제안서 작성 및 제출 - > 입찰

            
            자판(Keyboard) 정리
            	1) 기능키(Function key) : F1~F12 가 있으며, 각 프로그램마다 각 키의 고유 기능이 정의되어 있음.
            	2) 조합키(Hot key) : Ctrl, Alt, Shift 등의 키가 있으며, 단독으로는 특별한 기능이 없이 다른 키와 조합을 해야만 기능이 작동되는 키
            	3) 작동키(Running key) : Windows 로고키, Esc 키, Pause 키, Enter키 등이 있으며 작동을 시작하거나 종료 또는 일시중지 할 수 있는 키
            	4) 토글(Toggle key) :  CapsLock, NumLock, ScrollLock, insert, 한/영, 등이 있으며 두가지 기능을 교대로 수행할 수 있게 하는 키 
            	5) 방향키(Arrow Key) : 상/하/좌/우/home/end/PageDown/pageUp
            	6) 수정키(Edit key) : Back Space, Delete, SpaceBar(수정모드 : 지우면서 공백이 생김, 삽입모드 : 기존 내용을 뒤로 밀면서 공백이 생김), Tab key (4칸 이상 공백을 띄울 경우나 항목을 구분하는 공백을 만들 때)
            	7) 화면 갈무리 : PrtSc(PrintScreen) : 화면 캡쳐 ,  Alt + PrtSc  : 현재 창만 
            	8) 특수문자 :  ` ~ ! @ # $ % ^ & * ( ) - _ + = | \ ' " { }  [ ] : ; , . 
            	9) 변환키 : 한자키 ~ 한글 입혁 후 한자키 누르면, 한자변환 한글 자음만 타이핑 후에 한자키 누르면, 특수문자 변환
            	10) 글쇠 (a~z, ㄱ~ㅣ) : 언어나 단어를 타이핑하는 키 


	웹 환경 

            5대 브라우저 : Chrome, EDGE, Opera, Firefox, Safari

            5대 브라우저로 하나의 문서가 일치 또는 유사하게 동작하는지 점검 -> 크로스브라우징
            하나의 웹 애플리케이션이나 웹 문서가 각 종 기기에 맞게 동작되는지 점검 -> 크로스미디어
            
            웹 언어의 규격이 맞는지, 웹 접근에 불리한 환경에 놓인 사람도 쉽게 인지하고 사용할 수 있는지 점검  -> 웹 표준 
            